<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My blog</title>
    <link>https://www.lukawarren.com/blog/posts/</link>
    <description>Recent content in Posts on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 31 Oct 2020 10:01:56 +0000</lastBuildDate>
    
	<atom:link href="https://www.lukawarren.com/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hooking DirectX 11 to create an overlay for modding</title>
      <link>https://www.lukawarren.com/blog/posts/dx11-hooking/</link>
      <pubDate>Sat, 31 Oct 2020 10:01:56 +0000</pubDate>
      
      <guid>https://www.lukawarren.com/blog/posts/dx11-hooking/</guid>
      <description>After messing around with DirectX 11 the other week, I became curious as to how overlays, such as Fraps or those in game mods, worked. So I decided to create my own overlay for Saints Row the Third, a game which used the API, and draw a debug panel with ImGui.
It turns out that to modify the drawing process in a game, I&amp;rsquo;d have to hook into D3D11, where the drawing loop typically goes along the lines of:</description>
    </item>
    
    <item>
      <title>Cellula Automata - Creating Wire World</title>
      <link>https://www.lukawarren.com/blog/posts/wireworld/</link>
      <pubDate>Wed, 02 Sep 2020 21:01:55 +0100</pubDate>
      
      <guid>https://www.lukawarren.com/blog/posts/wireworld/</guid>
      <description>You might have heard of cellular automata. They consist of a grid of cells, where each cell has a finite number of states. It is the rules that govern these states that create a variety of interesting effects, from Conway&amp;rsquo;s Game of Life, giving rise to civilisations, wars and factories, to Wire World, a cellular automaton designed to simulate, at least in some respect, transistors.
So when my internet went out unexpectedly for an entire day, and having wanted to do something for a fun &amp;ldquo;code jam&amp;rdquo;, I decided to make my own version of Wire World, to see what all the fuss was about.</description>
    </item>
    
    <item>
      <title>Node CTF walkthrough</title>
      <link>https://www.lukawarren.com/blog/posts/node/</link>
      <pubDate>Fri, 31 Jul 2020 10:32:16 +0100</pubDate>
      
      <guid>https://www.lukawarren.com/blog/posts/node/</guid>
      <description>Node was a machine on Hackthebox a few years ago and was later put up on Vulnhub. I&amp;rsquo;ve only recently got around to doing it, but it was really rather interesting with its full-stack Javascript environment, something that is becoming increasingly common with the likes of NodeJS, and I found it quite enjoyable. In my opinion, it&amp;rsquo;s one of the more fun boxes on Hackthebox, and I encourage you to give it a go if you haven&amp;rsquo;t already.</description>
    </item>
    
    <item>
      <title>eLection 1 CTF walkthrough</title>
      <link>https://www.lukawarren.com/blog/posts/election/</link>
      <pubDate>Sat, 25 Jul 2020 09:34:23 +0100</pubDate>
      
      <guid>https://www.lukawarren.com/blog/posts/election/</guid>
      <description>Another enjoyable CTF, eLection: 1 promises to be an OSCP-like VM with medium level difficulty. It&amp;rsquo;s quite a straightforward box, but nonetheless a good excuse to sharpen your skills.
Enumeration Lets see what ports are open with nmap -T4 -A 192.168.123.132:
Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-25 10:01 BST Nmap scan report for 192.168.123.132 Host is up (0.00034s latency). Not shown: 998 closed ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.</description>
    </item>
    
    <item>
      <title>Cybersploit 2 CTF walkthrough</title>
      <link>https://www.lukawarren.com/blog/posts/cybersploit-2/</link>
      <pubDate>Fri, 24 Jul 2020 17:38:12 +0100</pubDate>
      
      <guid>https://www.lukawarren.com/blog/posts/cybersploit-2/</guid>
      <description>Cybersploit 2 is a fun boot2root on VulnHub. It&amp;rsquo;s quite an enjoyable box, and whilst user is really rather easy, getting root is quite an interesting affair (at least I found it to be).
Initial foothold Let&amp;rsquo;s scan the box and see what ports are open with nmap -sC -sV -p- 192.168.123.131:
Starting Nmap 7.80 ( https://nmap.org ) at 2020-07-24 19:54 BST Nmap scan report for 192.168.123.131 Host is up (0.</description>
    </item>
    
  </channel>
</rss>